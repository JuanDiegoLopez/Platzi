{"version":3,"sources":["agent-test.js"],"names":["config","logging","MetricStub","belongsTo","AgentStub","db","beforeEach","hasMany","setupDatabase","t","truthy","Agent"],"mappings":";;;;;AAAA;;;;AACA;;;;;;AAEA,IAAIA,SAAS;AACXC,WAAS,YAAY,CAAE;AADZ,CAAb;;AAIA,IAAIC,aAAa;AACfC,aAAW,YAAY,CAAE;AADV,CAAjB;;AAIA,IAAIC,YAAY,IAAhB;AACA,IAAIC,KAAK,IAAT;;AAEA,cAAKC,UAAL,CAAgB,YAAY;AAC1BF,cAAY;AACVG,aAAS,YAAY,CAAE;AADb,GAAZ;;AAIA,QAAMC,gBAAgB,0BAAW,KAAX,EAAkB;AACtC,sBAAkB,MAAMJ,SADc;AAEtC,uBAAmB,MAAMF;AAFa,GAAlB,CAAtB;;AAKAG,OAAK,MAAMG,cAAcR,MAAd,CAAX;AACD,CAXD;;AAaA,mBAAK,OAAL,EAAcS,KAAK;AAAA;;AACjBA,IAAEC,MAAF,uBAAS,qCAAGC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAmB,4BAAnB;AACD,CAFD","file":"agent-test.js","sourcesContent":["import test from 'ava'\r\nimport proxyquire from 'proxyquire'\r\n\r\nlet config = {\r\n  logging: function () {}\r\n}\r\n\r\nlet MetricStub = {\r\n  belongsTo: function () {}\r\n}\r\n\r\nlet AgentStub = null\r\nlet db = null\r\n\r\ntest.beforeEach(async () => {\r\n  AgentStub = {\r\n    hasMany: function () {}\r\n  }\r\n\r\n  const setupDatabase = proxyquire('../', {\r\n    './models/agent': () => AgentStub,\r\n    './models/metric': () => MetricStub\r\n  })\r\n\r\n  db = await setupDatabase(config)\r\n})\r\n\r\ntest('Agent', t => {\r\n  t.truthy(db.Agent, 'Agent service should exist')\r\n})\r\n"]}